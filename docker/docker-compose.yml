version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  jobmanager:
    image: flink:1.7.2-scala_2.12
    expose:
      - "6123"
      - "9249" # prometheus metrics
    ports:
      - "8082:8081" # map to 8082 on host, to differentiate from the dev minicluster UI (on 8081)
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - MVRS_DSPA_KAFKA_BROKERS=kafka:9093
      - MVRS_DSPA_DATA_DIR=/usr/share/flink/data
    volumes:
      - ./flink/conf/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - ./flink/lib/flink-metrics-prometheus-1.7.2.jar:/opt/flink/lib/flink-metrics-prometheus-1.7.2.jar
      - type: bind
        source: ${MVRS_DSPA_DATA_DIR_HOST:-./data} # default: ./data
        target: /usr/share/flink/data

  taskmanager:
    image:  flink:1.7.2-scala_2.12
    expose:
      - "6121"
      - "6122"
      - "9249" # prometheus metrics
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - MVRS_DSPA_KAFKA_BROKERS=kafka:9093
      - MVRS_DSPA_DATA_DIR=/usr/share/flink/data
    volumes:
      - ./flink/conf/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - ./flink/lib/flink-metrics-prometheus-1.7.2.jar:/opt/flink/lib/flink-metrics-prometheus-1.7.2.jar
      - type: bind
        source: ${MVRS_DSPA_DATA_DIR_HOST:-./data} # default: ./data
        target: /usr/share/flink/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.7.2
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch

  prom:
    image: quay.io/prometheus/prometheus:v2.8.1
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    depends_on:
      - exporter
  exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
  #    network_mode: host

  grafana:
    image: grafana/grafana
    ports:
      - "8080:3000"
    depends_on:
      - prom
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/custom.ini:/usr/share/grafana/conf/custom.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
  # uid/pwd?

volumes:
  esdata1:
  logs:
  grafana_data:
